require 'factory_girl'

# load fixtures
FactoryGirl.definition_file_paths = %w(../factories/)
FactoryGirl.find_definitions
include FactoryGirl::Syntax::Methods

# variables
etc_dir = ENV['ATS_ETC_DIR']
rputs = build(:rputs)
echo = build(:echo)
ret = build(:return)
server_eq = build(:server_eq)
origin = build(:origin)

# generate template
template = <<EOS
# suppose ATS listens 127.0.0.1:8080, and origin server does 127.0.0.1:80

# ATS::
map #{rputs.path} http://127.0.0.1:80/ @plugin=ts_mruby.so @pparam=#{etc_dir}ats_rputs.rb
map #{echo.path}  http://127.0.0.1:80/ @plugin=ts_mruby.so @pparam=#{etc_dir}ats_echo.rb
map #{ret.path}   http://127.0.0.1:80/ @plugin=ts_mruby.so @pparam=#{etc_dir}ats_return.rb

# ATS::Upstram
map #{server_eq.path} http://127.0.0.1:8080#{origin.path} @plugin=ts_mruby.so @pparam=#{etc_dir}ats_upstream_server_eq.rb

# Self-hosted dummy origin
map #{origin.path} http://127.0.0.1:8080/ @plugin=ts_mruby.so @pparam=#{etc_dir}origin.rb
EOS

puts template
